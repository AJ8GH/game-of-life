<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.aj8gh</groupId>
  <artifactId>game-of-life</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>

  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <relativePath/>
    <version>2.6.2</version>
  </parent>

  <modules>
    <module>application</module>
    <module>api-gateway</module>
    <module>api-client</module>
    <module>launcher</module>
    <module>coverage</module>
  </modules>

  <properties>
    <apiClient.artifactId>api-client</apiClient.artifactId>
    <apiGateway.artifactId>api-gateway</apiGateway.artifactId>
    <application.artifactId>application</application.artifactId>
    <launcher.artifactId>launcher</launcher.artifactId>
    <coverage.artifactId>coverage</coverage.artifactId>

    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jacoco.haltOnFailure>true</jacoco.haltOnFailure>
    <jacoco.target>0.8</jacoco.target>
    <checkstyle.config.location>google_checks.xml</checkstyle.config.location>
    <checkstyle.severity>warning</checkstyle.severity>
    <checkstyle.fail>true</checkstyle.fail>
    <checkstyle.console>true</checkstyle.console>
    <default.package>${project.groupId}.gameoflife</default.package>
    <start-class>${default.package}.GameOfLifeApplication</start-class>

    <byte-buddy.version>1.12.16</byte-buddy.version>
    <jacoco.version>0.8.8</jacoco.version>
    <junit.jupiter.version>5.9.0</junit.jupiter.version>
    <log4j.version>2.0.0</log4j.version>
    <lombok.version>1.18.24</lombok.version>
    <maven.checkstyle.version>3.2.0</maven.checkstyle.version>
    <maven.surefire.version>3.0.0-M5</maven.surefire.version>
    <maven.assembly.version>3.3.0</maven.assembly.version>
    <mockito.version>4.8.0</mockito.version>
    <slf4j.version>2.0.0</slf4j.version>
    <spring.boot.version>2.7.3</spring.boot.version>
    <spring.boot.maven.version>2.7.3</spring.boot.maven.version>
    <wiremock-jre8.version>2.32.0</wiremock-jre8.version>
  </properties>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.version}</version>
          <configuration>
            <finalName>game-of-life</finalName>
            <appendAssemblyId>false</appendAssemblyId>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
            <archive>
              <index>true</index>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addClasspath>true</addClasspath>
                <mainClass>${start-class}</mainClass>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.maven.version}</version>
          <executions>
            <execution>
              <id>repackage</id>
              <goals>
                <goal>repackage</goal>
              </goals>
              <configuration>
                <mainClass>${start-class}</mainClass>
                <executable>true</executable>
                <finalName>gol</finalName>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <excludes>
              <exclude>
                <groupId>${project.groupId}</groupId>
                <artifactId>${coverage.artifactId}</artifactId>
              </exclude>
            </excludes>
            <mainClass>${start-class}</mainClass>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>jacoco-maven-plugin</artifactId>
          <groupId>org.jacoco</groupId>
          <version>${jacoco.version}</version>
          <configuration>
            <excludes>
              <exclude>**/config/*</exclude>
            </excludes>
            <haltOnFailure>${jacoco.haltOnFailure}</haltOnFailure>
            <rules>
              <rule>
                <element>BUNDLE</element>
                <limits>
                  <limit>
                    <counter>INSTRUCTION</counter>
                    <value>COVEREDRATIO</value>
                    <minimum>${jacoco.target}</minimum>
                  </limit>
                </limits>
              </rule>
            </rules>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <id>default-prepare-agent</id>
            </execution>
            <execution>
              <goals>
                <goal>report</goal>
              </goals>
              <id>report</id>
              <phase>test</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven.checkstyle.version}</version>
          <configuration>
            <configLocation>${checkstyle.config.location}</configLocation>
            <violationSeverity>${checkstyle.severity}</violationSeverity>
            <failOnViolation>${checkstyle.fail}</failOnViolation>
            <consoleOutput>${checkstyle.console}</consoleOutput>
          </configuration>
          <executions>
            <execution>
              <id>validate</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${maven.surefire.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <dependencyManagement>
    <dependencies>
      <!-- Util -->
      <dependency>
        <artifactId>lombok</artifactId>
        <groupId>org.projectlombok</groupId>
        <version>${lombok.version}</version>
      </dependency>

      <!-- Spring -->
      <dependency>
        <artifactId>spring-boot-starter-web</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>spring-boot-starter-logging</artifactId>
            <groupId>org.springframework.boot</groupId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Logging -->
      <dependency>
        <artifactId>log4j-over-slf4j</artifactId>
        <groupId>org.slf4j</groupId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <artifactId>slf4j-api</artifactId>
        <groupId>org.slf4j</groupId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Project -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>${application.artifactId}</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>${apiClient.artifactId}</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>${apiGateway.artifactId}</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>${coverage.artifactId}</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>${launcher.artifactId}</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Test -->
      <dependency>
        <artifactId>junit-jupiter</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <artifactId>mockito-core</artifactId>
        <groupId>org.mockito</groupId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <artifactId>wiremock-jre8</artifactId>
        <groupId>com.github.tomakehurst</groupId>
        <version>${wiremock-jre8.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <artifactId>spring-boot-starter-test</artifactId>
        <groupId>org.springframework.boot</groupId>
        <scope>test</scope>
        <version>${spring.boot.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

</project>
